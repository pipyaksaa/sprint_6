{"name": "Test Dropdown Elements", "status": "failed", "statusDetails": {"message": "AssertionError: Expected text: 'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.', but got: ''\nassert '' == 'Допустим, вы... мая в 20:30.'\n  - Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.", "trace": "self = <test_main_page_dropdown.TestDropdown object at 0x10f844c50>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c56b859c-408d-4387-8282-d43c6c5394f4\")>, button_number = 3\nexpected_text = 'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с м...та, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.'\n\n    @pytest.mark.parametrize(\"button_number, expected_text\", [\n        (1, \"Сутки — 400 рублей. Оплата курьеру — наличными или картой.\"),\n        (2, \"Пока что у нас так: один заказ — один самокат. Если хотите покататься с друзьями, можете просто сделать несколько заказов — один за другим.\"),\n        (3, \"Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.\"),\n        (4, \"Только начиная с завтрашнего дня. Но скоро станем расторопнее.\"),\n        (5, \"Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010.\"),\n        (6, \"Самокат приезжает к вам с полной зарядкой. Этого хватает на восемь суток — даже если будете кататься без передышек и во сне. Зарядка не понадобится.\"),\n        (7, \"Да, пока самокат не привезли. Штрафа не будет, объяснительной записки тоже не попросим. Все же свои.\"),\n        (8, \"Да, обязательно. Всем самокатов! И Москве, и Московской области.\")\n    ])\n    @allure.title(\"Test Dropdown Elements\")\n    @allure.description(\"Test the text of dropdown elements\")\n    def test_dropdown_elements(self, driver, button_number, expected_text):\n        main_page = MainPage(driver)\n        main_page.open()\n        main_page.click_dropdown_button(button_number)\n        dropdown_text = main_page.get_dropdown_text(button_number)\n>       assert dropdown_text == expected_text, f\"Expected text: '{expected_text}', but got: '{dropdown_text}'\"\nE       AssertionError: Expected text: 'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.', but got: ''\nE       assert '' == 'Допустим, вы... мая в 20:30.'\nE         - Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.\n\ntests/test_main_page_dropdown.py:25: AssertionError"}, "description": "Test the text of dropdown elements", "steps": [{"name": "Open the main page", "status": "passed", "steps": [{"name": "Open the page", "status": "passed", "parameters": [{"name": "url", "value": "'https://qa-scooter.praktikum-services.ru/'"}], "start": 1698079041538, "stop": 1698079073592}], "start": 1698079041538, "stop": 1698079073593}, {"name": "Open dropdown", "status": "passed", "steps": [{"name": "Wait for element to be visible", "status": "passed", "parameters": [{"name": "locator", "value": "('id', 'rcc-confirm-button')"}], "start": 1698079073593, "stop": 1698079073635}, {"name": "Click element", "status": "passed", "parameters": [{"name": "locator", "value": "('id', 'rcc-confirm-button')"}], "start": 1698079073635, "stop": 1698079073866}, {"name": "Scroll to the bottom of the page", "status": "passed", "start": 1698079073866, "stop": 1698079073869}, {"name": "Click element", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//div[contains(text(), \"Как рассчитывается время аренды?\")]')"}], "start": 1698079073869, "stop": 1698079074120}], "parameters": [{"name": "button_number", "value": "3"}], "start": 1698079073593, "stop": 1698079074120}, {"name": "Check dropdown text", "status": "passed", "parameters": [{"name": "button_number", "value": "3"}], "start": 1698079074120, "stop": 1698079074146}], "parameters": [{"name": "button_number", "value": "3"}, {"name": "expected_text", "value": "'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.'"}], "start": 1698079041538, "stop": 1698079074148, "uuid": "f9d49173-5fd6-445c-8960-a9ec3b620723", "historyId": "5697ad2d27095190ef4b8243dda85d55", "testCaseId": "772fb58cb06e4a09968c3d639a0dead2", "fullName": "tests.test_main_page_dropdown.TestDropdown#test_dropdown_elements", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page_dropdown"}, {"name": "subSuite", "value": "TestDropdown"}, {"name": "host", "value": "MacBook-Pro-Regina.local"}, {"name": "thread", "value": "54464-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page_dropdown"}]}